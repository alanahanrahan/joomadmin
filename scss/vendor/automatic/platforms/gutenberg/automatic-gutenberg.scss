// Use this file to override Gutenberg styles.

// Breakpoints
@import "../../dashboard/breakpoints";

// Framework Options
@import "../../dashboard/options";

// Functions
@import "../../helpers/calc-math";
@import "../../helpers/functions";

// Import Vars
@import "../../dashboard/color-vars";
@import "../../dashboard/box-shadow-vars";
@import "../../dashboard/contextual-vars";
@import "../../dashboard/additional-styles";
@import "../../dashboard/spacing-vars";
@import "../../dashboard/text-vars";
@import "../../dashboard/col-vars";
@import "../../dashboard/radius-vars";
@import "../../dashboard/sticky-vars";
@import "../../dashboard/button-vars";

// Import Maps
@import "../../maps/aspect-maps";
@import "../../maps/breakout-maps";
@import "../../maps/button-maps";
@import "../../maps/col-maps";
@import "../../maps/color-maps";
@import "../../maps/contextual-maps";
@import "../../modules/grid/grid-maps";
@import "../../maps/height-maps";
@import "../../maps/fallback-maps";
@import "../../maps/flex-maps";
@import "../../maps/radius-maps";
@import "../../maps/size-maps";
@import "../../maps/spacing-maps";
@import "../../maps/position-maps";
@import "../../maps/text-maps";
@import "../../maps/width-maps";
@import "../../maps/z-index-maps";

// Mixins
@import "../../helpers/mixins";

// Modules
@import "flex";

// Fix the editor width
.editor-styles-wrapper {
    width: 100% !important;
  }
  
// Load Buttons

@if $option-buttons == on {
  @each $buttonColor, $buttonProps in $buttons {
    .btn--#{$buttonColor} {
      background-color: map-get(
        map-get($buttons, $buttonColor),
        background-clr
      );
      color: map-get(map-get($buttons, $buttonColor), text-clr);
      cursor: pointer;
      border-style: solid;
      border-color: map-get(map-get($buttons, $buttonColor), border-clr);
      @include button;

      @if $option-btn-text-size == on {
        font-size: $text-m-pure;
        font-size: fluidCalc($btn-text-min, $btn-text-max);
        font-size: fluidClamp($btn-text-min, $btn-text-max);
      } @else {
        font-size: $text-m-pure;
        font-size: fluidCalc($text-m-min, $text-m-max);
        font-size: fluidClamp($text-m-min, $text-m-max);
      }

      &:hover {
        background-color: map-get(
          map-get($buttons, $buttonColor),
          background-clr-hover
        );
        color: map-get(map-get($buttons, $buttonColor), text-clr-hover);
        border-color: map-get(
          map-get($buttons, $buttonColor),
          border-clr-hover
        );
        cursor: pointer;
      }
    }

    .btn--#{$buttonColor}.btn--outline {
      background-color: transparent;
      border-style: solid;
      cursor: pointer;
      color: map-get(map-get($buttons, $buttonColor), outline-text-clr);
      border-color: map-get(
        map-get($buttons, $buttonColor),
        outline-border-clr
      );
      @include outline-btn-default;

      &:hover {
        background-color: map-get(
          map-get($buttons, $buttonColor),
          outline-background-clr-hover
        );
        color: map-get(map-get($buttons, $buttonColor), outline-text-clr-hover);
      }
    }
  }
}